In Java, a variable is a container that holds data that can be manipulated and used in your program. Variables are used to store different types of data, such as numbers, text, and objects. Java has several types of variables, including:

1. Primitive Data Types: These are the basic data types in Java that store simple values. They are not objects and have a fixed size in memory. The eight primitive data types in Java are:
   - byte: 8-bit signed integer
   - short: 16-bit signed integer
   - int: 32-bit signed integer
   - long: 64-bit signed integer
   - float: 32-bit floating-point number
   - double: 64-bit floating-point number
   - char: 16-bit Unicode character
   - boolean: Represents true or false values

   Example of declaring primitive variables:
   int age = 30;
   double salary = 50000.50;
   char grade = 'A';
   boolean isEmployed = true;


2. Reference Data Types: These are used to store references to objects. Unlike primitives, they do not store the actual data but instead point to the memory location where the object is stored. Common reference data types include classes, interfaces, arrays, and enums.

   Example of declaring reference variables
   String name = "John";
   ArrayList<Integer> numbers = new ArrayList<>();
   MyClass myObject = new MyClass();


3. Constants: These are variables whose values should not change once they are assigned. In Java, you can define constants using the `final` keyword.

   Example of declaring a constant:
   final double PI = 3.14159265359;


4. Local Variables: These variables are declared inside a method or a block of code and have limited scope. They are only accessible within the method or block in which they are declared.

   Example of a local variable:
   void myMethod() {
       int localVar = 10;
       // localVar is only accessible within this method
   }


5. Instance Variables (Non-static Variables): These variables belong to an instance of a class and are declared within the class but outside of any method. Each instance of the class has its own copy of these variables.

   Example of an instance variable:
   public class MyClass {
       int instanceVar = 20;
   }


6. Static Variables (Class Variables): These variables are shared among all instances of a class and are declared with the `static` keyword. They belong to the class rather than to any specific instance of the class.

   Example of a static variable:
   public class MyClass {
       static int staticVar = 100;
   }


7. Method Parameters: Parameters are variables that are passed into methods to provide input data for the method.

   Example of a method with parameters:
   void printMessage(String message) {
       System.out.println(message);
   }


In Java, variables must be declared before they are used, specifying their type and optionally initializing them with a value. The scope and lifetime of variables depend on where and how they are declared.